(defvar rev-bluetooth      false)
(defvar win-bluetooth      false)

(defpoll bluetooth-info :interval "10s"
  "./scripts/bluetooth-status.sh"
)

(defpoll bluetooth-devices :interval "5s"
  "./scripts/bluetooth-list-devices.sh"
)

(defwidget bluetooth-logo []
  (image  :fill-svg {colors[9]}
          :path "${bluetooth-info[0] ? "./icons/bluetooth.svg"
                                     : "./icons/bluetooth-disabled.svg"}"
  )
)

(defwidget bluetooth-toggle []
   (button :onclick "notify-send 'Powering ${bluetooth-info[0] ? "off" : "on"} Bluetooth' \
                     && bluetoothctl power ${bluetooth-info[0] ? "off" : "on"}"
  (bluetooth-logo)
)
)

(defwidget bluetooth []
  (eventbox :onclick "./scripts/launch-app/bluetooth"
            :onhover     "eww update rev-bluetooth=true"
	          :onhoverlost "eww update rev-bluetooth=false"
  (box :class "bluetooth" :space-evenly "false"
          (button :onclick "eww-wayland ${win-bluetooth ? "close" : "open"} bluetooth-window \
                            && eww-wayland update win-bluetooth=${!win-bluetooth}"
            (bluetooth-logo)
        	)
          (revealer :transition "slideleft"
			              :reveal "${rev-bluetooth && bluetooth-info[0]}"
			              :duration "350ms"
                (label :text "${bluetooth-info[1]}"))))
  )


(defwidget bluetooth-window []
  (box :class "bar_1" :orientation "vertical" :style "padding: 5px;" :space-evenly false
    
    (box :space-evenly false :spacing spacing
      
         (button :onclick "notify-send 'Powering ${bluetooth-info[0] ? "off" : "on"} Bluetooth' \
                     && bluetoothctl power ${bluetooth-info[0] ? "off" : "on"}"
            (image :path "./icons/toggle-${bluetooth-info[0]}.svg"
                   :fill-svg {colors[9]})
          )

      ;;(bluetooth-toggle)


      (label :text "Bluetooth" :class "blue" :halign "start")
      )

    (box :visible {bluetooth-info[0]} :orientation "vertical"

      (label :text "Devices:" :halign "start")
      (for device in bluetooth-devices

        (box :spacing {spacing} :space-evenly false
          (button :onclick "${ device.connected && device.paired
                                  ? "notify-send 'Disconnecting from ${device.name}' \
                                     && bluetoothctl disconnect ${device.address}"
                              
                              : !device.connected && device.paired
                                  ? "notify-send 'Connecting to ${device.name}' \ 
                                     && bluetoothctl connect ${device.address}"

                              : "notify-send '${device.name} is not paired'" } "

            (image :path "./icons/heart${device.connected ? "-active" : ""}.svg"
                   :fill-svg "${device.paired ? colors[5] : colors[10]}"
            )
          )

          (label :text "${device.name}")
          ;;(label :text "${device.battery != "" ? "${device.battery}%" : ""}")
          (label :text "${device.connected ? "(Connected)" : ""}")

        )
      )
    )
  )
)