(defvar rev-bluetooth      false)
(defvar win-bluetooth      false)

(defpoll bluetooth-info :interval "10s"
  "./scripts/bluetooth/bluetooth-status.sh"
)

(defpoll bluetooth-devices :interval "5s"
  "./scripts/bluetooth/bluetooth-list-devices.sh"
)

(defwidget bluetooth-logo []
  (image  :fill-svg {colors[9]}
          :path "${bluetooth-info[0] ? "./icons/bluetooth.svg"
                                     : "./icons/bluetooth-disabled.svg"}"
  )
)

(defwidget bluetooth-toggle []
   (button :onclick "notify-send 'Powering ${bluetooth-info[0] ? "off" : "on"} Bluetooth' \
                     && bluetoothctl power ${bluetooth-info[0] ? "off" : "on"}"
  (bluetooth-logo)
)
)

(defwidget bluetooth []
  (eventbox :onclick "eww-wayland open bluetooth-window \
                     && eww-wayland update win-bluetooth=${!win-bluetooth}"
            :onhover     "eww update rev-bluetooth=true"
	          :onhoverlost "eww update rev-bluetooth=false"
  (box :class "bluetooth" :space-evenly "false"
          (bluetooth-logo)
          (revealer :transition "slideleft"
			              :reveal "${rev-bluetooth && bluetooth-info[0]}"
			              :duration "350ms"
                (label :text "${bluetooth-info[1]}"))))
  )



(defwidget paired-device-indicator [device]
  
  (box :spacing {spacing} :space-evenly false :visible {device.paired}
    (button :onclick "${ device.connected ? "./scripts/bluetooth/bluetooth-disconnect.sh ${device.address} ${device.name}"
                                          : "./scripts/bluetooth/bluetooth-connect.sh    ${device.address} ${device.name}"
                        }"


            (image :path "./icons/heart${device.connected ? "-active" : ""}.svg"
                   :fill-svg "${device.paired ? colors[5] : colors[10]}"
            )
          )

          (label :text "${device.name}")
          (label :text "${device.connected ? "(Connected)" : ""}" :class "${device.connected ? "green" : ""}")
          ;;(label :text "${device.battery != "" ? "${device.battery}%" : ""}")



  )
  
)

(defwidget unpaired-device-indicator [device]
  
  (box :spacing {spacing} :space-evenly false :visible {!device.paired}
    (button :onclick "./scripts/bluetooth/bluetooth-pair.sh ${device.address} ${device.name}"
        (image :path "./icons/heart.svg" :fill-svg {colors[6]})
    )
    (label :text "${device.name}")
  )
)



(defwidget bluetooth-window []


  (eventbox :onhoverlost "eww-wayland close bluetooth-window"
    
    (box :class "bar_1" :orientation "vertical" :style "padding: 5px;" :space-evenly false
            
      (box :space-evenly false :spacing spacing
        
           (button :onclick "notify-send -c 'bluetooth' \
                             -h string:x-dunst-stack-tag:'bluetooth' \
                             'Powering ${bluetooth-info[0] ? "off" : "on"} Bluetooth' \
                       && bluetoothctl power ${bluetooth-info[0] ? "off" : "on"}"
              (image :path "./icons/toggle-${bluetooth-info[0]}.svg"
                     :fill-svg {colors[9]})
            )
  
          (label :text "Bluetooth" :class "blue" :halign "start")
      )
  
      (box :visible {bluetooth-info[0]} :orientation "vertical"
      
        (label :text "Paired devices:" :halign "start")
        (for device in bluetooth-devices
          (paired-device-indicator :device device)  
        )
      
      )
  
      (box :visible {bluetooth-info[0]} :orientation "vertical"

        (label :text "Unpaired devices:" :halign "start")
        (for device in bluetooth-devices
          (unpaired-device-indicator :device device)  
        )
      
      )
    )
  )
)













;; (defwidget device-indicator [device visible]
;;   
;;   (box :spacing {spacing} :space-evenly false :visible visible
;;     (button :onclick "${ device.connected && device.paired
;;                                   ? "notify-send 'Disconnecting from ${device.name}' \
;;                                      && bluetoothctl disconnect ${device.address}"
;;                               
;;                               : !device.connected && device.paired
;;                                   ? "notify-send 'Connecting to ${device.name}' \ 
;;                                      && bluetoothctl connect ${device.address}"
;; 
;;                               : "notify-send '${device.name} is not paired'" } "
;; 
;;             (image :path "./icons/heart${device.connected ? "-active" : ""}.svg"
;;                    :fill-svg "${device.paired ? colors[5] : colors[10]}"
;;             )
;;           )
;; 
;;           (label :text "${device.name}")
;;           (label :text "${device.connected ? "(Connected)" : ""}")
;;           ;;(label :text "${device.battery != "" ? "${device.battery}%" : ""}")
;; 
;; 
;;   )
;;   
;; )
